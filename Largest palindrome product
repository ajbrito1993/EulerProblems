public class Euler_4 {

    /**
     * Palindromic number reads the same both ways.
     * The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
     * Find the largest palindrome made from the product of two 3-digit numbers.
     **/
    public static void main(String[] args) {

        final int SIZE = 1000;

        int product = 0;
        int largestProduct = 0;

        for (int i = 100; i < SIZE; i++) {

            for (int j = 100; j < SIZE; j++) {
                product = i * j;
                if(isPalindrome(product) && product > largestProduct){
                  largestProduct = product;
                }
            }
        }
        System.out.println("Largest Product: " + largestProduct);

    }

    static boolean isPalindrome(int n) {

        String checkPalindrome = Integer.toString(n);
        int i = 0;
        int j = checkPalindrome.length() - 1;

        while (i < j) {
            if (checkPalindrome.charAt(i) != checkPalindrome.charAt(j)) {
                return false;
            }
            i++;
            j--;
        }

        return true;
    }
}
